apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jsonschema2pojo'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.trello.victor'

buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.13'
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }

    defaultConfig {

        /*
        *   Versioning
        *       Alpha = 1xxx
        *       Beta = 2xxx
        *       Release = 3xxx
        * */
        applicationId "com.aphoh.muser"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1003
        versionName "0.2.1-alpha"
    }
    sourceSets {
        main {
            java.srcDirs += 'src/main/kotlin'
            svg.srcDir '../imgres'
        }
        test.java.srcDirs += 'src/test/kotlin'
    }
    buildTypes {
        all {
            buildConfigField 'String', 'SC_CLIENT_ID', "\"$SC_CLIENT_ID\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors{
        mock{
            buildConfigField 'boolean', 'mock', 'true'
        }
        prod{
            buildConfigField 'boolean', 'mock', 'false'
        }
    }
}
repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //Support Libs/Req libs
    compile "com.android.support:design:$android_version"
    compile "com.android.support:appcompat-v7:$android_version"
    compile "com.android.support:recyclerview-v7:$android_version"
    compile "com.android.support:support-v4:$android_version"

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "info.android15.nucleus:nucleus:$nucleus_version"
    compile "info.android15.nucleus:nucleus-support-v7:$nucleus_version"
    //UI Libs
    compile 'me.grantland:autofittextview:0.2.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'jp.wasabeef:recyclerview-animators:2.1.0'

    //Networking Libs
    compile "com.squareup.retrofit:retrofit:$retrofit_version"
    compile 'com.squareup.okhttp:okhttp:2.4.0'
    compile 'com.facebook.stetho:stetho-okhttp:1.1.1'
    //Util Libs
    compile 'io.reactivex:rxkotlin:0.24.100'
    compile 'io.reactivex:rxandroid:0.25.0'
    //Dependency Injection
    compile "com.google.dagger:dagger:$dagger_version"
    apt "com.google.dagger:dagger-compiler:$dagger_version"
    compile 'org.glassfish:javax.annotation:10.0-b28'

    //Testing
    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:1.7.1'
}

victor {
    // Any assets defined in relative terms needs a base DPI specified
    svgDpi = 42

    // Do not generate these densities for SVG assets
    excludeDensities = ['ldpi', 'xxxhdpi']
}

jsonSchema2Pojo {

    generateBuilders = false
    usePrimitives = false
    source = files("${project.rootDir}/schema/track.json")

    targetDirectory = file("${project.rootDir}/app/build/generated/source/js2p/")

    // Package name used for generated Java classes (for types where a fully qualified name has not
    // been supplied in the schema using the 'javaType' property).
    targetPackage = 'com.aphoh.muser.data.network.model'

    useLongIntegers = true

    useDoubleNumbers = true

    includeHashcodeAndEquals = false

    includeToString = false

    // The style of annotations to use in the generated Java types. Supported values:
    //  - jackson (alias of jackson2)
    //  - jackson2 (apply annotations from the Jackson 2.x library)
    //  - jackson1 (apply annotations from the Jackson 1.x library)
    //  - gson (apply annotations from the Gson library)
    //  - none (apply no annotations at all)
    annotationStyle = 'gson'

    includeJsr303Annotations = false

    sourceType = 'json'

    // Whether to empty the target directory before generation occurs, to clear out all source files
    // that have been generated previously. <strong>Be warned</strong>, when activated this option
    // will cause jsonschema2pojo to <strong>indiscriminately delete the entire contents of the target
    // directory (all files and folders)</strong> before it begins generating sources.
    boolean removeOldOutput = true

    // The character encoding that should be used when writing the generated Java source files
    String outputEncoding = 'UTF-8'

    // Whether to use {@link org.joda.time.DateTime} instead of {@link java.util.Date} when adding
    // date type fields to generated Java types.
    boolean useJodaDates = false

    // Whether to use commons-lang 3.x imports instead of commons-lang 2.x imports when adding equals,
    // hashCode and toString methods.
    boolean useCommonsLang3 = false

    // Whether to initialize Set and List fields as empty collections, or leave them as null.
    boolean initializeCollections = true
}