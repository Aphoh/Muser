apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jsonschema2pojo'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath 'org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:0.4.13'
    }
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.aphoh.muser"
        minSdkVersion 16
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    sourceSets{
        main{
            java.srcDirs += 'src/main/kotlin'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:22.2.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "info.android15.nucleus:nucleus:$nucleus_version"
    compile "info.android15.nucleus:nucleus-support-v7:$nucleus_version"
    compile "com.squareup.retrofit:retrofit:$retrofit_version"
    apt "com.raizlabs.android:DBFlow-Compiler:$dbflow_version"
    compile "com.raizlabs.android:DBFlow-Core:$dbflow_version"
    compile "com.raizlabs.android:DBFlow:$dbflow_version"
}

jsonSchema2Pojo {

    generateBuilders = false
    usePrimitives = true
    source = files("${project.rootDir}/schema/")

    targetDirectory = file("${project.rootDir}/app/build/generated/source/js2p/")

    // Package name used for generated Java classes (for types where a fully qualified name has not
    // been supplied in the schema using the 'javaType' property).
    targetPackage = 'com.aphoh.muser.data.network.model'

    useLongIntegers = true

    useDoubleNumbers = true

    includeHashcodeAndEquals = false

    includeToString = false

    // The style of annotations to use in the generated Java types. Supported values:
    //  - jackson (alias of jackson2)
    //  - jackson2 (apply annotations from the Jackson 2.x library)
    //  - jackson1 (apply annotations from the Jackson 1.x library)
    //  - gson (apply annotations from the Gson library)
    //  - none (apply no annotations at all)
    annotationStyle = 'gson'

    includeJsr303Annotations = false

    sourceType = 'json'

    // Whether to empty the target directory before generation occurs, to clear out all source files
    // that have been generated previously. <strong>Be warned</strong>, when activated this option
    // will cause jsonschema2pojo to <strong>indiscriminately delete the entire contents of the target
    // directory (all files and folders)</strong> before it begins generating sources.
    boolean removeOldOutput = true

    // The character encoding that should be used when writing the generated Java source files
    String outputEncoding = 'UTF-8'

    // Whether to use {@link org.joda.time.DateTime} instead of {@link java.util.Date} when adding
    // date type fields to generated Java types.
    boolean useJodaDates = false

    // Whether to use commons-lang 3.x imports instead of commons-lang 2.x imports when adding equals,
    // hashCode and toString methods.
    boolean useCommonsLang3 = false

    // Whether to initialize Set and List fields as empty collections, or leave them as null.
    boolean initializeCollections = true
}